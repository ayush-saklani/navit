import { Result as Result$1, Exception as Exception$1 } from '@zxing/library';
import React from 'react';

declare function QrCodeScanner<T = unknown>(props: {
    /**
     * This event gets fired when a qr-code is scanned
     * @param result The result of the qr-code (parsed)
     * @param rawResult The result of the qr-code (raw, this is the result that you got before version 2.0.0)
     */
    onResult: (result: T, rawResult: Result) => void;
    /** This event gets fired when a exception occurs */
    onError?: (error: Exception) => void;
    /** Validate the qr codes data */
    validate?: (data: unknown) => T;
    /**
     * The time between looking for a qr code (in milliseconds) in the video stream
     * @default 500
     */
    scanDelay?: number;
    /**
     * Which mode should the scanner face
     * @default "environment"
     */
    facingMode?: "environment" | "user";
    /**
     * The UI of the scanner
     * @param videoElement The video element that displays the video stream
     * @example
     * ```tsx
     * import { QrCodeScanner } from "react-simple-qr-code-scanner";
     *
     * const App = () => (
     *   <div style={{ width: "50vw" }}>
     *     <QrCodeScanner
     *       onResult={(result) => {
     *         console.log(result);
     *       }}
     *     >
     *       {(videoElement) => (
     *         <div
     *           style={{
     *             borderColor: "rgb(147 197 253)",
     *             borderWidth: "4px",
     *             width: "100%",
     *           }}
     *         >
     *           <video
     *             ref={videoElement}
     *             style={{ width: "100%", height: "100%" }}
     *           />
     *         </div>
     *       )}
     *     </QrCodeScanner>
     *   </div>
     * );
     * ```
     */
    children?: (videoElement: React.RefObject<HTMLVideoElement>) => React.ReactNode;
}): React.JSX.Element;

/** The type that the on result event returns */
type Result = Result$1;
/** The type that the on exception event returns */
type Exception = Exception$1;

export { Exception, QrCodeScanner, Result };
